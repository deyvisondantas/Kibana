apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-persistentvolumeclaim
spec:
  storageClassName: "oci"
  selector:
    matchLabels:
      failure-domain.beta.kubernetes.io/zone: "US-ASHBURN-AD-1"
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
[deyvison@ks8-m1 ~]$ cat nfs-nginx-ingress.yamlÂ  
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    run: nginx
  name: nginx-nfs
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      run: nginx
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        run: nginx
    spec:
      containers:
      - image: nginx
        imagePullPolicy: Always
        name: nginx
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
        volumeMounts:
        - name: nfs-claim
          mountPath: /var/public
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      volumes:
      - name: nfs-claim
        persistentVolumeClaim:
          claimName: nfs-persistentvolumeclaim
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      

---

apiVersion: v1
kind: Service
metadata:
  labels:
    run: nginx
  name: nginx-nfs
  namespace: default
spec:
  selector:
    run: nginx
  ports:
    - name: http
      port: 80
      targetPort: 80

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: nginx-nfs
spec:
  rules:
  - host: nginx-nfs.34.68.9.197.nip.io
    http:
      paths:
      - path: /
        backend:
          serviceName: nginx-nfs
          servicePort: 80
